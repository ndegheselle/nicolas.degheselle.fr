---
import "../scss/styles.scss";
import { getLangFromUrl } from "@i18n/utils";
import { languages } from "@i18n/ui";

interface Props {
	title: string;
}

const lang = getLangFromUrl(Astro.url);
const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" href="/favicon.ico" sizes="any" />

		<script
			src="https://kit.fontawesome.com/81bbd31b5a.js"
			crossorigin="anonymous"></script>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed&family=Teko:wght@400;700&family=Ubuntu&display=swap" rel="stylesheet">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body data-theme="light">
		<div class="side-menu">
			<button id="changeTheme">
				<i class="fa-solid fa-circle"></i>
			</button>
			<a href={`/${lang == "en" ? "fr" : "en"}`}>
				{lang == "en" ? languages["fr"] : languages["en"]}
			</a>
			<slot name="side-menu" />
		</div>
		<slot />
	</body>

	<script>
		let theme = localStorage.getItem('theme');
	
		if (!theme) {
			const darkThemeMq = window.matchMedia("(prefers-color-scheme: dark)");
			theme = darkThemeMq.matches ? "dark" : "light";
		}
	
		document.body.dataset.theme = theme;
	
		document.getElementById("changeTheme").addEventListener("click", () => {
			document.body.dataset.theme = document.body.dataset.theme === "light" ? "dark" : "light";
			localStorage.setItem('theme', document.body.dataset.theme);
		});
	</script>
</html>

<style>
	.side-menu {
		position: fixed;
		top: 0rem;
		right: 0.2rem;
		z-index: 100;

		flex-direction: column;
		display: flex;
		align-items: center;
	}

	#changeTheme {
		background-color: transparent;
		border: none;
		color: var(--color-foreground-low);
		font-size: 1.4rem;
	}
</style>
