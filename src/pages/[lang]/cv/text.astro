---
import { formatDate } from "@base/utils.js";
import { useTranslations } from "@i18n/utils";
import BlankLayout from "@layouts/BlankLayout.astro";

import { languages } from "@i18n/ui";

export async function getStaticPaths() {
    return Object.keys(languages).map((lang) => ({ params: { lang } }));
}

function separate(str, maxLineLength = characterPerLine) {
    const wsLookup = 15; // Look backwards n characters for a whitespace
    const regex = new RegExp(
        String.raw`\s*(?:(\S{${maxLineLength}})|([\s\S]{${maxLineLength - wsLookup},${maxLineLength}})(?!\S))`,
        "g",
    );

    const text = str.replace(regex, (_, x, y) => (x ? `${x}-\n` : `${y}\n`));
    return text.split("\n").filter((i) => i);
}

function formatBulletPoints(bullets) {
    let listStr = "";
    for (let bullet of bullets) {
        let bulletStr = "";
        const lines = separate(bullet, characterPerLine - 6);
        for (let i = 0; i < lines.length; i++) {
            if (i == 0) bulletStr += Array(4).join(" ") + "- " + lines[i];
            else bulletStr += Array(6).join(" ") + lines[i];
            bulletStr += "\n";
        }
        listStr += bulletStr;
    }
    return listStr;
}

const characterPerLine = 80;
const { lang } = Astro.params;
const cv = await import(`../../../data/${lang}/cv.json`);
const t = useTranslations(lang);

const text = `Nicolas DE GHESELLE
--
${separate(cv.description).join("\n")}
--
${cv.contact.email.padStart(characterPerLine)}
${cv.contact.website.padStart(characterPerLine)}
${cv.contact.phone.padStart(characterPerLine)}

${`# ${t("cv.experience")} `.padEnd(characterPerLine, "-")}
${cv.experiences
    .slice(Math.max(cv.experiences.length - 2))
    .reverse()
    .map(
        (experience) => `
${experience.position}
${experience.location} - ${formatDate(experience.from) + (experience.to ? ` - ${formatDate(experience.to)}` : ` - ${t("time.present")}`)}

${formatBulletPoints(experience.responsibilities)}`,
    )
    .join("")}
${`# ${t("cv.education")} `.padEnd(characterPerLine, "-")}
${cv.educations
    .map(
        (eductation) => `
${eductation.name}
${eductation.location} - ${formatDate(eductation.from)} - ${formatDate(eductation.to)}
${eductation.description}`,
    )
    .join("")}

${`# ${t("cv.skills")} `.padEnd(characterPerLine, "-")}
${Object.keys(cv.skills)
    .map(
        (skill) => `
${skill.padEnd(17)} ${cv.skills[skill][0].join(", ")}${cv.skills[skill][1] ? ", " + cv.skills[skill][1].join(", ") : ""}`,
    )
    .join("")}

${`# ${t("cv.certifications")} `.padEnd(characterPerLine, "-")}
${cv.certifications
    .map(
        (certification) => `
${certification.name} - ${formatDate(certification.date)}
${certification.description}
`,
    )
    .join("")}`;
---

<BlankLayout title="Nicolas De gheselle - CV">
    <a slot="side-menu" href={`/${lang}/cv`}>
        <i class="fa-solid fa-file"></i>
    </a>
    <a slot="side-menu" href={`/${lang}/cv/json`}>
        <i class="fa-solid fa-code"></i>
    </a>
    <a slot="side-menu" href={`/${lang}/cv/text`}>
        <i class="fa-regular fa-file-lines"></i>
    </a>
    <a slot="side-menu" href={`/${lang}/cv/print`}>
        <i class="fa-solid fa-print"></i>
    </a>
    <div class="container page">
        <code>{text}</code>
    </div>
</BlankLayout>

<style>
    .page {
        padding: 0.4rem;
        overflow-x: auto;
        max-width: 39.5rem;
    }
    code {
        white-space: pre;
        word-wrap: break-word; /* Ensures long words are broken */
    }
</style>
